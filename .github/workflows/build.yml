name: BUILD
permissions:
  contents: read

on:
  push:
  schedule:
    - cron:  '1 */8 * * *'

jobs:
  buildAUR:
    permissions:
      contents: write
    strategy:
      matrix:
        repos:
          - activitywatch-git
          - carapace-bin
          - dracut-numlock
          - google-chrome-dev
          - ion-git
          - murex
          - outline
          - pacman-hook-kernel-install
          - systemd-cron
          - uutils-diffutils-bin
          - uutils-findutils-bin
          - visual-studio-code-insiders-bin
      fail-fast: false
      
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: ./build-aur-action
      with:
        repo-name: ${{ matrix.repos }}
        preinstallPkgs: ${{ matrix.preinstall-pkgs }}
    
    - uses: actions/upload-artifact@v4
      with:
        path: ./*/*.pkg.tar.zst
        name: ${{ matrix.repos }}
        if-no-files-found: error
        
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        tag: "packages"
        artifacts: "./*/*.zst"
        token: ${{ secrets.GITHUB_TOKEN }}

  buildNonAUR:
    permissions:
      contents: write
    strategy:
      matrix:
        PKGBUILDs: 
          - aw-awatcher-bin
      fail-fast: false
      
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Non-AUR packages
        id: makepkg
        uses: ./build-nonaur-action
        with:
          pkgdir: ${{ matrix.PKGBUILDs }}
          aurDeps: true
          
      - uses: actions/upload-artifact@v4
        with:
          path: ./*/*.pkg.tar.zst
          name: ${{ matrix.PKGBUILDs }}
          if-no-files-found: error
      
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: "packages"
          artifacts: ${{ steps.makepkg.outputs.pkgfile0 }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
  uploadToOneDrive:      
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: always()
    needs: 
      - buildAUR
      - buildNonAUR

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/download-artifact@v4
        id: download

      - name: Display structure of downloaded files
        run: ls -R ${{ steps.download.outputs.download-path }}
      
      - uses: ./create-db-and-upload-action
        with:
          RCLONE_CONFIG_CONTENT: ${{ secrets.RCLONE_CONFIG }}
          RCLONE_CONFIG_NAME: gdrive
          dest_path: /archrepo
          repo_name: repo
          gpg-privatekey: ${{ secrets.gpg_private_key }}
          local_path: ${{ steps.download.outputs.download-path }}

      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: "packages"
          artifacts: "./upload_packages/*.sig,./upload_packages/*.files,./upload_packages/*.db,./upload_packages/*.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
